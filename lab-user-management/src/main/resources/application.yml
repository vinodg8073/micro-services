server:
  port: 8081
  servlet:
    context-path: /user
spring:
  application:
    name: lab-user-management
  datasource:
    url: jdbc:postgresql://localhost:5432/laboratoryDB 
    username: root
    password: admin
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  sql:
    init:
      mode: always  # executes the schema.sql @ startup. but automatically executed if H2 db is used.
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

### Read configs from SCCS  
  config:                                                   # reads based on application.name and profile.active
    import: "optional:configserver:http://localhost:8091/"  # here "optional:" tells SB that if not able to connect to CS still starts the app.. & "configserver" is just indication that we're connecting to Confg server
  profiles:
    active: "prod"  # or pass from external config

# MQ connection same for other microservices. By default it has below values no need to configure   
#  rabbitmq:
#    host: "localhost"
#    port: 5672
#    username: "guest"
#    password: "guest"

### Read configs from Spring profiles           
#  config:                    # commented out to use SCCS to read the configurations
#    import:
#    - "application_qa.yml"
#    - "application_prod.yml"

#  profiles:     #Disadvantage : activates list of profile but is hardcoded (need to  generate the docker image for each environment). therefore pass external configuration (cli arguments) to activate  the profile
#    active:     # Example args using cli, jvm, env variables 
#    - "qa"      # cli (more preceding/priority) => java -jar xxx.jar --spring.profiles.active=prod || jvm => java -Dspring.profiles.active=prod -jar xxx.jar || env:SPRING_PROFILES_ACTIVE=prod; java -jar xxx.jar 
build:
  version: "1.0"
code-owner:
  name: vinod g
  email: vinodgowda1998@gmail.com
  contact:
    - xxxxxx9494
    - xxxxxx1234   

#management:  # by default actuator doesn't expose
#  endpoints:
#    web:
#      exposure:
#        include: "*"     #Enable & expose management related api paths(actuator api's)

resilience4j.circuitbreaker:
    configs:
      default:   #applicable for all CB names and can also define for specific CB based on names set
        sliding-window-size: 10  #How many request to be monitored before Changing state from CLOSED to OPEN
        permitted-number-of-calls-in-half-open-state: 2 # Num.. of request to be allowed by HALF_OPEN state to decide and transit next state OPEN/CLOSED
        failure-rate-threshold: 50  # percentage of failed request (sliding-window-size) to change the state from CLOSED to OPEN
        wait-duration-in-open-state: 1000  # in ms remain in the open state for 1 second before transitioning to a half-open state to check if the service has recovered by allowing (permitted-number-of-calls-in-half-open-state) requests
